[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multidocqa"
version = "0.1.0"
description = "Legal document question answering using the COLIEE dataset"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    {name = "Author Name", email = "author@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "transformers==4.50.3",
    "xformers",
    "datasets",
    "trl",
    "pydantic",
]

[tool.setuptools.packages.find]
include = ["multidocqa*"]

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "flake8-pyproject",
    "pytest",
    "pytest-cov",
    "mypy",
    "isort",
    "pre-commit",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | data
  | notebooks
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["multidocqa"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "data",
    "notebooks",
    ".venv",
    ".eggs",
    "*.egg",
]

[tool.pytest.ini_options]
testpaths = ["multidocqa/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "data/",
    "notebooks/",
    ".venv/",
]
